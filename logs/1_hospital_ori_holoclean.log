01:24:40 - [DEBUG] - initiating session with parameters: {'db_user': 'datacleanuser', 'db_pwd': 'abcd1234', 'db_host': 'localhost', 'db_name': 'holo', 'threads': 1, 'timeout': 180000, 'seed': 45, 'learning_rate': 0.001, 'optimizer': 'adam', 'epochs': 10, 'weight_decay': 0.01, 'momentum': 0.0, 'batch_size': 1, 'weak_label_thresh': 0.99, 'domain_thresh_1': 0, 'domain_thresh_2': 0, 'max_domain': 10000, 'cor_strength': 0.6, 'nb_cor_strength': 0.8, 'feature_norm': False, 'weight_norm': False, 'estimator_epochs': 3, 'estimator_batch_size': 32, 'verbose': True, 'bias': False, 'print_fw': True, 'debug_mode': False}
01:24:40 - [ INFO] - Loaded 1000 rows with 20000 cells
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:40 - [DEBUG] - Time to create index: 0.00 secs
01:24:41 - [DEBUG] - Time to create index: 0.00 secs
01:24:41 - [DEBUG] - Time to create index: 0.00 secs
01:24:41 - [DEBUG] - Time to create index: 0.00 secs
01:24:41 - [ INFO] - DONE Loading dirty_index_holoclean.csv
01:24:41 - [DEBUG] - Time to load dataset: 0.25 secs
01:24:41 - [DEBUG] - OPENED constraints file successfully
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.ZipCode,t2.ZipCode)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.ZipCode,t2.ZipCode)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.ZipCode,t2.ZipCode)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.PhoneNumber,t2.PhoneNumber)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.PhoneNumber,t2.PhoneNumber)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.PhoneNumber,t2.PhoneNumber)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.MeasureCode,t2.MeasureCode)&IQ(t1.MeasureName,t2.MeasureName)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.MeasureCode,t2.MeasureCode)&IQ(t1.MeasureName,t2.MeasureName)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.MeasureCode,t2.MeasureCode)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.MeasureName,t2.MeasureName)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.MeasureCode,t2.MeasureCode)&IQ(t1.Stateavg,t2.Stateavg)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.MeasureCode,t2.MeasureCode)&IQ(t1.Stateavg,t2.Stateavg)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.MeasureCode,t2.MeasureCode)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.Stateavg,t2.Stateavg)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.ProviderNumber,t2.ProviderNumber)&IQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.ProviderNumber,t2.ProviderNumber)&IQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.ProviderNumber,t2.ProviderNumber)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.MeasureCode,t2.MeasureCode)&IQ(t1.Condition,t2.Condition)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.MeasureCode,t2.MeasureCode)&IQ(t1.Condition,t2.Condition)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.MeasureCode,t2.MeasureCode)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.Condition,t2.Condition)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.Address1,t2.Address1)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.Address1,t2.Address1)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.Address1,t2.Address1)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.HospitalOwner,t2.HospitalOwner)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.HospitalOwner,t2.HospitalOwner)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.HospitalOwner,t2.HospitalOwner)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.ProviderNumber,t2.ProviderNumber)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.ProviderNumber,t2.ProviderNumber)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.ProviderNumber,t2.ProviderNumber)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.City,t2.City)&IQ(t1.CountyName,t2.CountyName)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.City,t2.City)&IQ(t1.CountyName,t2.CountyName)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.City,t2.City)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.CountyName,t2.CountyName)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.ZipCode,t2.ZipCode)&IQ(t1.EmergencyService,t2.EmergencyService)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.ZipCode,t2.ZipCode)&IQ(t1.EmergencyService,t2.EmergencyService)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.ZipCode,t2.ZipCode)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.EmergencyService,t2.EmergencyService)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.City,t2.City)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&IQ(t1.City,t2.City)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.City,t2.City)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.MeasureName,t2.MeasureName)&IQ(t1.MeasureCode,t2.MeasureCode)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.MeasureName,t2.MeasureName)&IQ(t1.MeasureCode,t2.MeasureCode)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.MeasureName,t2.MeasureName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.MeasureCode,t2.MeasureCode)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&EQ(t1.PhoneNumber,t2.PhoneNumber)&EQ(t1.HospitalOwner,t2.HospitalOwner)&IQ(t1.State,t2.State)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.HospitalName,t2.HospitalName)&EQ(t1.PhoneNumber,t2.PhoneNumber)&EQ(t1.HospitalOwner,t2.HospitalOwner)&IQ(t1.State,t2.State)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalName,t2.HospitalName)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.PhoneNumber,t2.PhoneNumber)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.HospitalOwner,t2.HospitalOwner)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.State,t2.State)
01:24:41 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.Condition,t2.Condition)&EQ(t1.MeasureName,t2.MeasureName)&IQ(t1.HospitalType,t2.HospitalType)
01:24:41 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.Condition,t2.Condition)&EQ(t1.MeasureName,t2.MeasureName)&IQ(t1.HospitalType,t2.HospitalType)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.Condition,t2.Condition)
01:24:41 - [DEBUG] - DONE parsing predicate: EQ(t1.MeasureName,t2.MeasureName)
01:24:41 - [DEBUG] - DONE parsing predicate: IQ(t1.HospitalType,t2.HospitalType)
01:24:41 - [ INFO] - DONE Loading DCs from dc_rules_dc_holoclean.txt
01:24:41 - [DEBUG] - Time to load dirty data: 0.01 secs
01:24:41 - [DEBUG] - DONE with Error Detector: NullDetector in 0.07 secs
01:24:41 - [DEBUG] - Preparing to execute 15 queries.
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."ZipCode"<>t2."ZipCode") with id 0
01:24:41 - [DEBUG] - Time to execute query with id 0: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."PhoneNumber"<>t2."PhoneNumber") with id 1
01:24:41 - [DEBUG] - Time to execute query with id 1: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."MeasureCode"=t2."MeasureCode" AND t1."MeasureName"<>t2."MeasureName") with id 2
01:24:41 - [DEBUG] - Time to execute query with id 2: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."MeasureCode"=t2."MeasureCode" AND t1."Stateavg"<>t2."Stateavg") with id 3
01:24:41 - [DEBUG] - Time to execute query with id 3: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."ProviderNumber"=t2."ProviderNumber" AND t1."HospitalName"<>t2."HospitalName") with id 4
01:24:41 - [DEBUG] - Time to execute query with id 4: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."MeasureCode"=t2."MeasureCode" AND t1."Condition"<>t2."Condition") with id 5
01:24:41 - [DEBUG] - Time to execute query with id 5: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."Address1"<>t2."Address1") with id 6
01:24:41 - [DEBUG] - Time to execute query with id 6: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."HospitalOwner"<>t2."HospitalOwner") with id 7
01:24:41 - [DEBUG] - Time to execute query with id 7: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."ProviderNumber"<>t2."ProviderNumber") with id 8
01:24:41 - [DEBUG] - Time to execute query with id 8: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."City"=t2."City" AND t1."CountyName"<>t2."CountyName") with id 9
01:24:41 - [DEBUG] - Time to execute query with id 9: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."ZipCode"=t2."ZipCode" AND t1."EmergencyService"<>t2."EmergencyService") with id 10
01:24:41 - [DEBUG] - Time to execute query with id 10: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."City"<>t2."City") with id 11
01:24:41 - [DEBUG] - Time to execute query with id 11: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."MeasureName"=t2."MeasureName" AND t1."MeasureCode"<>t2."MeasureCode") with id 12
01:24:41 - [DEBUG] - Time to execute query with id 12: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."HospitalName"=t2."HospitalName" AND t1."PhoneNumber"=t2."PhoneNumber" AND t1."HospitalOwner"=t2."HospitalOwner" AND t1."State"<>t2."State") with id 13
01:24:41 - [DEBUG] - Time to execute query with id 13: 0.00 secs
01:24:41 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "hospital_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "hospital_ori" as t2 WHERE t1."Condition"=t2."Condition" AND t1."MeasureName"=t2."MeasureName" AND t1."HospitalType"<>t2."HospitalType") with id 14
01:24:41 - [DEBUG] - Time to execute query with id 14: 0.00 secs
01:24:41 - [DEBUG] - Time to execute 15 queries: 0.02 secs
01:24:41 - [DEBUG] - DONE with Error Detector: ViolationDetector in 0.11 secs
01:24:42 - [ INFO] - detected 11038 potentially erroneous cells
01:24:45 - [DEBUG] - Time to create index: 0.00 secs
01:24:45 - [ INFO] - DONE with error detection.
01:24:45 - [DEBUG] - Time to detect errors: 0.98 secs
01:24:51 - [DEBUG] - Time to execute query: 0.00 secs
01:24:51 - [DEBUG] - computing frequency and co-occurrence statistics from raw data...
01:24:51 - [DEBUG] - Collecting single/pair-wise statistics...
01:24:55 - [DEBUG] - DONE computing statistics in 4.10s
01:24:55 - [DEBUG] - preparing pruned co-occurring statistics...
  0%|          | 0/19 [00:00<?, ?it/s] 95%|█████████▍| 18/19 [00:00<00:00, 99.57it/s]100%|██████████| 19/19 [00:00<00:00, 102.25it/s]
01:24:56 - [DEBUG] - DONE with pruned co-occurring statistics in 0.19 secs
01:24:56 - [DEBUG] - generating initial set of un-pruned domain values...
  0%|          | 0/1000 [00:00<?, ?it/s] 11%|█         | 106/1000 [00:00<00:00, 1055.62it/s] 23%|██▎       | 233/1000 [00:00<00:00, 1110.46it/s] 35%|███▌      | 354/1000 [00:00<00:00, 1138.33it/s] 48%|████▊     | 483/1000 [00:00<00:00, 1178.98it/s] 61%|██████    | 612/1000 [00:00<00:00, 1209.48it/s] 73%|███████▎  | 730/1000 [00:00<00:00, 1199.20it/s] 84%|████████▍ | 839/1000 [00:00<00:00, 1121.22it/s] 97%|█████████▋| 974/1000 [00:00<00:00, 1179.75it/s]100%|██████████| 1000/1000 [00:00<00:00, 1199.53it/s]
01:24:57 - [DEBUG] - DONE generating initial set of domain values in 0.93
01:24:57 - [DEBUG] - training posterior model for estimating domain value probabilities...
01:24:57 - [DEBUG] - DONE training posterior model in 0.01s
01:24:57 - [DEBUG] - predicting domain value probabilities from posterior model...
01:24:57 - [DEBUG] - DONE predictions in 0.00 secs, re-constructing cell domain...
01:24:57 - [DEBUG] - re-assembling final cell domain table...
0it [00:00, ?it/s]
  0%|          | 0/15000 [00:00<?, ?it/s][A185it [00:00, 1849.45it/s]
  1%|▏         | 218/15000 [00:00<00:06, 2170.63it/s][A473it [00:00, 2070.05it/s]
  4%|▎         | 555/15000 [00:00<00:05, 2429.90it/s][A762it [00:00, 2262.17it/s]
  6%|▌         | 842/15000 [00:00<00:05, 2546.09it/s][A1121it [00:00, 2539.20it/s]
  8%|▊         | 1208/15000 [00:00<00:04, 2799.74it/s][A1470it [00:00, 2758.25it/s]
 10%|█         | 1504/15000 [00:00<00:04, 2839.15it/s][A1766it [00:00, 2814.59it/s]
 12%|█▏        | 1821/15000 [00:00<00:04, 2923.31it/s][A2040it [00:00, 2700.61it/s]
 14%|█▍        | 2096/15000 [00:00<00:04, 2762.39it/s][A2306it [00:00, 2564.27it/s]
 16%|█▌        | 2362/15000 [00:00<00:04, 2657.62it/s][A2603it [00:00, 2673.37it/s]
 18%|█▊        | 2630/15000 [00:00<00:04, 2662.27it/s][A2893it [00:01, 2736.20it/s]
 20%|█▉        | 2951/15000 [00:01<00:04, 2804.86it/s][A3201it [00:01, 2829.60it/s]
 22%|██▏       | 3246/15000 [00:01<00:04, 2727.46it/s][A3485it [00:01, 2460.39it/s]
 23%|██▎       | 3519/15000 [00:01<00:04, 2525.18it/s][A3741it [00:01, 2411.08it/s]
 25%|██▌       | 3775/15000 [00:01<00:04, 2368.61it/s][A3989it [00:01, 2423.70it/s]
 27%|██▋       | 4046/15000 [00:01<00:04, 2461.05it/s][A4373it [00:01, 2723.06it/s]
 30%|██▉       | 4439/15000 [00:01<00:03, 2771.29it/s][A4661it [00:01, 2673.55it/s]
 32%|███▏      | 4732/15000 [00:01<00:03, 2726.17it/s][A5019it [00:01, 2893.08it/s]
 34%|███▍      | 5091/15000 [00:01<00:03, 2937.58it/s][A5382it [00:01, 3079.18it/s]
 36%|███▌      | 5417/15000 [00:01<00:03, 3026.42it/s][A5703it [00:02, 3060.88it/s]
 38%|███▊      | 5753/15000 [00:02<00:02, 3116.47it/s][A6018it [00:02, 2992.23it/s]
 40%|████      | 6072/15000 [00:02<00:02, 3028.94it/s][A6324it [00:02, 2950.63it/s]
 43%|████▎     | 6381/15000 [00:02<00:02, 2989.40it/s][A6758it [00:02, 3263.38it/s]
 45%|████▌     | 6800/15000 [00:02<00:02, 3270.17it/s][A7098it [00:02, 3138.25it/s]
 48%|████▊     | 7138/15000 [00:02<00:02, 3156.65it/s][A7423it [00:02, 3088.90it/s]
 50%|████▉     | 7463/15000 [00:02<00:02, 3008.24it/s][A7740it [00:02, 2980.45it/s]
 52%|█████▏    | 7772/15000 [00:02<00:02, 3021.27it/s][A8104it [00:02, 3150.35it/s]
 54%|█████▍    | 8136/15000 [00:02<00:02, 3182.09it/s][A8507it [00:02, 3370.33it/s]
 57%|█████▋    | 8528/15000 [00:02<00:01, 3367.10it/s][A8854it [00:02, 3334.14it/s]
 59%|█████▉    | 8872/15000 [00:02<00:01, 3353.93it/s][A9194it [00:03, 3022.76it/s]
 61%|██████▏   | 9213/15000 [00:03<00:01, 3023.79it/s][A9603it [00:03, 3279.36it/s]
 64%|██████▍   | 9625/15000 [00:03<00:01, 3285.81it/s][A9945it [00:03, 2995.80it/s]
 66%|██████▋   | 9967/15000 [00:03<00:01, 2995.58it/s][A10259it [00:03, 3017.76it/s]
 69%|██████▊   | 10281/15000 [00:03<00:01, 3029.65it/s][A10571it [00:03, 2934.04it/s]
 71%|███████   | 10595/15000 [00:03<00:01, 2945.44it/s][A10872it [00:03, 2865.80it/s]
 73%|███████▎  | 10898/15000 [00:03<00:01, 2870.89it/s][A11192it [00:03, 2949.17it/s]
 75%|███████▍  | 11202/15000 [00:03<00:01, 2911.58it/s][A11492it [00:03, 2375.68it/s]
 77%|███████▋  | 11498/15000 [00:03<00:01, 2372.89it/s][A11751it [00:04, 2147.01it/s]
 78%|███████▊  | 11755/15000 [00:04<00:01, 2143.11it/s][A12040it [00:04, 2325.98it/s]
 80%|████████  | 12047/15000 [00:04<00:01, 2328.73it/s][A12291it [00:04, 2078.11it/s]
 82%|████████▏ | 12297/15000 [00:04<00:01, 2033.18it/s][A12517it [00:04, 1805.10it/s]
 83%|████████▎ | 12520/15000 [00:04<00:01, 1790.78it/s][A12716it [00:04, 1812.50it/s]
 85%|████████▍ | 12718/15000 [00:04<00:01, 1802.94it/s][A12911it [00:04, 1427.50it/s]
 86%|████████▌ | 12912/15000 [00:04<00:01, 1434.31it/s][A13092it [00:04, 1508.98it/s]
 87%|████████▋ | 13092/15000 [00:04<00:01, 1513.20it/s][A13260it [00:05, 1388.75it/s]
 88%|████████▊ | 13260/15000 [00:05<00:01, 1391.27it/s][A13426it [00:05, 1456.86it/s]
 90%|████████▉ | 13426/15000 [00:05<00:01, 1458.80it/s][A13582it [00:05, 1448.39it/s]
 91%|█████████ | 13582/15000 [00:05<00:00, 1449.71it/s][A13778it [00:05, 1568.00it/s]
 92%|█████████▏| 13778/15000 [00:05<00:00, 1569.11it/s][A14041it [00:05, 1775.94it/s]
 94%|█████████▎| 14041/15000 [00:05<00:00, 1776.95it/s][A14277it [00:05, 1917.43it/s]
 95%|█████████▌| 14277/15000 [00:05<00:00, 1918.23it/s][A14483it [00:05, 1713.42it/s]
 97%|█████████▋| 14483/15000 [00:05<00:00, 1713.88it/s][A14696it [00:05, 1814.97it/s]
 98%|█████████▊| 14696/15000 [00:05<00:00, 1814.44it/s][A14889it [00:05, 1753.96it/s]
 99%|█████████▉| 14889/15000 [00:05<00:00, 1754.54it/s][A
100%|██████████| 15000/15000 [00:05<00:00, 2507.95it/s][A15000it [00:06, 2484.95it/s]
01:25:03 - [DEBUG] - DONE assembling cell domain table in 5.50s
01:25:03 - [ INFO] - number of (additional) weak labels assigned from posterior model: 553
01:25:03 - [DEBUG] - DONE generating domain and weak labels
01:25:07 - [DEBUG] - Time to create index: 0.00 secs
01:25:07 - [DEBUG] - Time to create index: 0.00 secs
01:25:07 - [DEBUG] - Time to create index: 0.00 secs
01:25:08 - [DEBUG] - Time to create table: 0.00 secs
01:25:09 - [DEBUG] - Time to create index: 0.00 secs
01:25:09 - [ INFO] - DONE with domain preparation.
01:25:09 - [DEBUG] - Time to setup the domain: 24.09 secs
01:25:09 - [DEBUG] - Time to execute query: 0.00 secs
01:25:09 - [DEBUG] - Time to execute query: 0.00 secs
01:25:09 - [DEBUG] - Time to execute query: 0.00 secs
01:25:10 - [DEBUG] - Time to execute query: 0.00 secs
01:25:10 - [DEBUG] - Time to execute query: 0.00 secs
01:25:10 - [DEBUG] - featurizing training data...
01:25:10 - [DEBUG] - Time to execute query: 0.02 secs
  0%|          | 0/15000 [00:00<?, ?it/s]  0%|          | 30/15000 [00:00<00:50, 299.05it/s]  0%|          | 60/15000 [00:00<00:50, 297.19it/s]  1%|          | 87/15000 [00:00<00:51, 287.24it/s]  1%|          | 114/15000 [00:00<00:52, 281.55it/s]  1%|          | 152/15000 [00:00<00:48, 304.14it/s]  1%|          | 181/15000 [00:00<00:49, 296.81it/s]  1%|▏         | 208/15000 [00:00<00:57, 255.60it/s]  2%|▏         | 233/15000 [00:00<01:06, 222.49it/s]  2%|▏         | 283/15000 [00:00<00:55, 266.89it/s]  2%|▏         | 337/15000 [00:01<00:47, 311.85it/s]  2%|▏         | 374/15000 [00:01<00:47, 308.79it/s]  3%|▎         | 442/15000 [00:01<00:39, 368.20it/s]  3%|▎         | 506/15000 [00:01<00:34, 421.42it/s]  4%|▍         | 574/15000 [00:01<00:30, 475.43it/s]  4%|▍         | 651/15000 [00:01<00:26, 535.92it/s]  5%|▍         | 713/15000 [00:01<00:30, 474.11it/s]  5%|▌         | 768/15000 [00:02<00:41, 345.11it/s]  6%|▌         | 832/15000 [00:02<00:35, 399.52it/s]  6%|▌         | 910/15000 [00:02<00:30, 467.78it/s]  7%|▋         | 976/15000 [00:02<00:27, 504.93it/s]  7%|▋         | 1036/15000 [00:02<00:29, 467.85it/s]  7%|▋         | 1111/15000 [00:02<00:26, 522.85it/s]  8%|▊         | 1171/15000 [00:02<00:27, 494.77it/s]  8%|▊         | 1234/15000 [00:02<00:26, 526.69it/s]  9%|▊         | 1294/15000 [00:02<00:25, 544.96it/s]  9%|▉         | 1352/15000 [00:03<00:25, 527.96it/s]  9%|▉         | 1418/15000 [00:03<00:24, 557.65it/s] 10%|▉         | 1476/15000 [00:03<00:38, 354.67it/s] 10%|█         | 1523/15000 [00:03<00:45, 295.80it/s] 10%|█         | 1571/15000 [00:03<00:40, 333.92it/s] 11%|█         | 1617/15000 [00:03<00:36, 362.72it/s] 11%|█         | 1660/15000 [00:04<00:39, 336.58it/s] 11%|█▏        | 1715/15000 [00:04<00:34, 380.38it/s] 12%|█▏        | 1784/15000 [00:04<00:30, 438.34it/s]