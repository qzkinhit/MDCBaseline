01:32:36 - [DEBUG] - initiating session with parameters: {'db_user': 'datacleanuser', 'db_pwd': 'abcd1234', 'db_host': 'localhost', 'db_name': 'holo', 'threads': 1, 'timeout': 180000, 'seed': 45, 'learning_rate': 0.001, 'optimizer': 'adam', 'epochs': 10, 'weight_decay': 0.01, 'momentum': 0.0, 'batch_size': 1, 'weak_label_thresh': 0.99, 'domain_thresh_1': 0, 'domain_thresh_2': 0, 'max_domain': 10000, 'cor_strength': 0.6, 'nb_cor_strength': 0.8, 'feature_norm': False, 'weight_norm': False, 'estimator_epochs': 3, 'estimator_batch_size': 32, 'verbose': True, 'bias': False, 'print_fw': True, 'debug_mode': False}
01:32:36 - [ INFO] - Loaded 2410 rows with 26510 cells
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [DEBUG] - Time to create index: 0.00 secs
01:32:37 - [ INFO] - DONE Loading dirty_index_holoclean.csv
01:32:37 - [DEBUG] - Time to load dataset: 0.31 secs
01:32:37 - [DEBUG] - OPENED constraints file successfully
01:32:37 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.brewery_name,t2.brewery_name)&IQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.brewery_name,t2.brewery_name)&IQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE parsing predicate: EQ(t1.brewery_name,t2.brewery_name)
01:32:37 - [DEBUG] - DONE parsing predicate: IQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.brewery_id,t2.brewery_id)&IQ(t1.brewery_name,t2.brewery_name)
01:32:37 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.brewery_id,t2.brewery_id)&IQ(t1.brewery_name,t2.brewery_name)
01:32:37 - [DEBUG] - DONE parsing predicate: EQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE parsing predicate: IQ(t1.brewery_name,t2.brewery_name)
01:32:37 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.brewery_id,t2.brewery_id)&IQ(t1.city,t2.city)
01:32:37 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.brewery_id,t2.brewery_id)&IQ(t1.city,t2.city)
01:32:37 - [DEBUG] - DONE parsing predicate: EQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE parsing predicate: IQ(t1.city,t2.city)
01:32:37 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.brewery_id,t2.brewery_id)&IQ(t1.state,t2.state)
01:32:37 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.brewery_id,t2.brewery_id)&IQ(t1.state,t2.state)
01:32:37 - [DEBUG] - DONE parsing predicate: EQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE parsing predicate: IQ(t1.state,t2.state)
01:32:37 - [DEBUG] - DONE pre-processing constraint: t1&t2&EQ(t1.beer_name,t2.beer_name)&EQ(t1.brewery_name,t2.brewery_name)&IQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE extracting tuples from constraint: t1&t2&EQ(t1.beer_name,t2.beer_name)&EQ(t1.brewery_name,t2.brewery_name)&IQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [DEBUG] - DONE parsing predicate: EQ(t1.beer_name,t2.beer_name)
01:32:37 - [DEBUG] - DONE parsing predicate: EQ(t1.brewery_name,t2.brewery_name)
01:32:37 - [DEBUG] - DONE parsing predicate: IQ(t1.brewery_id,t2.brewery_id)
01:32:37 - [ INFO] - DONE Loading DCs from dc_rules_holoclean.txt
01:32:37 - [DEBUG] - Time to load dirty data: 0.00 secs
01:32:37 - [DEBUG] - DONE with Error Detector: NullDetector in 0.04 secs
01:32:37 - [DEBUG] - Preparing to execute 5 queries.
01:32:37 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "beers_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "beers_ori" as t2 WHERE t1."brewery_name"=t2."brewery_name" AND t1."brewery_id"<>t2."brewery_id") with id 0
01:32:37 - [DEBUG] - Time to execute query with id 0: 0.00 secs
01:32:37 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "beers_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "beers_ori" as t2 WHERE t1."brewery_id"=t2."brewery_id" AND t1."brewery_name"<>t2."brewery_name") with id 1
01:32:37 - [DEBUG] - Time to execute query with id 1: 0.00 secs
01:32:37 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "beers_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "beers_ori" as t2 WHERE t1."brewery_id"=t2."brewery_id" AND t1."city"<>t2."city") with id 2
01:32:37 - [DEBUG] - Time to execute query with id 2: 0.00 secs
01:32:37 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "beers_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "beers_ori" as t2 WHERE t1."brewery_id"=t2."brewery_id" AND t1."state"<>t2."state") with id 3
01:32:37 - [DEBUG] - Time to execute query with id 3: 0.00 secs
01:32:37 - [DEBUG] - Starting to execute query SELECT t1._tid_ FROM "beers_ori" as t1 WHERE   EXISTS (SELECT t2._tid_ FROM "beers_ori" as t2 WHERE t1."beer_name"=t2."beer_name" AND t1."brewery_name"=t2."brewery_name" AND t1."brewery_id"<>t2."brewery_id") with id 4
01:32:37 - [DEBUG] - Time to execute query with id 4: 0.00 secs
01:32:37 - [DEBUG] - Time to execute 5 queries: 0.01 secs
01:32:37 - [DEBUG] - DONE with Error Detector: ViolationDetector in 0.03 secs
01:32:38 - [ INFO] - detected 2725 potentially erroneous cells
01:32:38 - [DEBUG] - Time to create index: 0.00 secs
01:32:38 - [ INFO] - DONE with error detection.
01:32:38 - [DEBUG] - Time to detect errors: 0.29 secs
01:32:44 - [DEBUG] - Time to execute query: 0.00 secs
01:32:44 - [DEBUG] - computing frequency and co-occurrence statistics from raw data...
01:32:44 - [DEBUG] - Collecting single/pair-wise statistics...
01:32:45 - [DEBUG] - DONE computing statistics in 1.77s
01:32:45 - [DEBUG] - preparing pruned co-occurring statistics...
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:01,  5.73it/s] 70%|███████   | 7/10 [00:00<00:00,  7.81it/s]100%|██████████| 10/10 [00:00<00:00, 31.12it/s]
01:32:46 - [DEBUG] - DONE with pruned co-occurring statistics in 0.29 secs
01:32:46 - [DEBUG] - generating initial set of un-pruned domain values...
  0%|          | 0/2410 [00:00<?, ?it/s]  4%|▍         | 103/2410 [00:00<00:02, 1027.14it/s]  8%|▊         | 204/2410 [00:00<00:02, 1017.09it/s] 13%|█▎        | 310/2410 [00:00<00:02, 1015.21it/s] 19%|█▉        | 455/2410 [00:00<00:01, 1115.37it/s] 23%|██▎       | 549/2410 [00:00<00:01, 1053.08it/s] 27%|██▋       | 652/2410 [00:00<00:01, 1043.07it/s] 31%|███       | 747/2410 [00:00<00:01, 960.30it/s]  35%|███▌      | 847/2410 [00:00<00:01, 968.02it/s] 40%|████      | 965/2410 [00:00<00:01, 1021.44it/s] 46%|████▋     | 1118/2410 [00:01<00:01, 1130.54it/s] 51%|█████     | 1234/2410 [00:01<00:01, 963.19it/s]  56%|█████▌    | 1340/2410 [00:01<00:01, 970.65it/s] 61%|██████    | 1459/2410 [00:01<00:00, 1027.04it/s] 65%|██████▍   | 1566/2410 [00:01<00:00, 851.74it/s]  69%|██████▉   | 1659/2410 [00:01<00:00, 839.65it/s] 74%|███████▎  | 1775/2410 [00:01<00:00, 912.89it/s] 78%|███████▊  | 1873/2410 [00:02<00:00, 663.74it/s] 82%|████████▏ | 1984/2410 [00:02<00:00, 750.09it/s] 88%|████████▊ | 2113/2410 [00:02<00:00, 856.02it/s] 92%|█████████▏| 2214/2410 [00:02<00:00, 854.27it/s] 96%|█████████▌| 2311/2410 [00:02<00:00, 884.93it/s]100%|█████████▉| 2407/2410 [00:02<00:00, 811.29it/s]100%|██████████| 2410/2410 [00:02<00:00, 927.42it/s]
01:32:48 - [DEBUG] - DONE generating initial set of domain values in 2.55
01:32:48 - [DEBUG] - training posterior model for estimating domain value probabilities...
01:32:48 - [DEBUG] - DONE training posterior model in 0.02s
01:32:48 - [DEBUG] - predicting domain value probabilities from posterior model...
01:32:48 - [DEBUG] - DONE predictions in 0.00 secs, re-constructing cell domain...
01:32:48 - [DEBUG] - re-assembling final cell domain table...
0it [00:00, ?it/s]
  0%|          | 0/12050 [00:00<?, ?it/s][A529it [00:00, 5272.62it/s]
  5%|▌         | 646/12050 [00:00<00:01, 6459.93it/s][A1145it [00:00, 5509.78it/s]
 11%|█         | 1291/12050 [00:00<00:01, 6455.80it/s][A1882it [00:00, 5959.71it/s]
 16%|█▌        | 1946/12050 [00:00<00:01, 6477.19it/s][A2310it [00:00, 4890.05it/s]
 20%|█▉        | 2373/12050 [00:00<00:01, 5259.59it/s][A2884it [00:00, 5116.45it/s]
 24%|██▍       | 2920/12050 [00:00<00:01, 5304.75it/s][A3395it [00:00, 5095.05it/s]
 29%|██▉       | 3469/12050 [00:00<00:01, 5328.46it/s][A3904it [00:00, 5085.16it/s]
 33%|███▎      | 3969/12050 [00:00<00:01, 5214.73it/s][A4409it [00:00, 5070.14it/s]
 37%|███▋      | 4451/12050 [00:00<00:01, 5072.02it/s][A4897it [00:00, 4858.33it/s]
 41%|████      | 4932/12050 [00:00<00:01, 4928.43it/s][A5392it [00:01, 4881.68it/s]
 45%|████▍     | 5411/12050 [00:01<00:01, 4880.25it/s][A5956it [00:01, 5086.35it/s]
 50%|████▉     | 6019/12050 [00:01<00:01, 5165.12it/s][A6710it [00:01, 5635.52it/s]
 56%|█████▌    | 6738/12050 [00:01<00:00, 5639.42it/s][A7376it [00:01, 5907.28it/s]
 62%|██████▏   | 7444/12050 [00:01<00:00, 5997.79it/s][A7982it [00:01, 5721.46it/s]
 67%|██████▋   | 8057/12050 [00:01<00:00, 5776.24it/s][A8566it [00:01, 5274.47it/s]
 72%|███████▏  | 8646/12050 [00:01<00:00, 5019.41it/s][A9109it [00:01, 5124.12it/s]
 76%|███████▋  | 9216/12050 [00:01<00:00, 5203.42it/s][A9663it [00:01, 5242.11it/s]
 82%|████████▏ | 9839/12050 [00:01<00:00, 5471.39it/s][A10262it [00:01, 5444.68it/s]
 86%|████████▋ | 10404/12050 [00:01<00:00, 5287.75it/s][A10831it [00:01, 5515.47it/s]
 92%|█████████▏| 11097/12050 [00:02<00:00, 5691.28it/s][A11469it [00:02, 5730.98it/s]
 97%|█████████▋| 11736/12050 [00:02<00:00, 5883.79it/s][A
100%|██████████| 12050/12050 [00:02<00:00, 5582.70it/s][A12050it [00:02, 5490.80it/s]
01:32:51 - [DEBUG] - DONE assembling cell domain table in 2.43s
01:32:51 - [ INFO] - number of (additional) weak labels assigned from posterior model: 80
01:32:51 - [DEBUG] - DONE generating domain and weak labels
01:32:55 - [DEBUG] - Time to create index: 0.00 secs
01:32:55 - [DEBUG] - Time to create index: 0.00 secs
01:32:55 - [DEBUG] - Time to create index: 0.00 secs
01:32:55 - [DEBUG] - Time to create table: 0.00 secs
01:32:57 - [DEBUG] - Time to create index: 0.00 secs
01:32:57 - [ INFO] - DONE with domain preparation.
01:32:57 - [DEBUG] - Time to setup the domain: 19.11 secs
01:32:57 - [DEBUG] - Time to execute query: 0.00 secs
01:32:57 - [DEBUG] - Time to execute query: 0.00 secs
01:32:57 - [DEBUG] - Time to execute query: 0.00 secs
01:32:57 - [DEBUG] - Time to execute query: 0.00 secs
01:32:57 - [DEBUG] - Time to execute query: 0.00 secs
01:32:57 - [DEBUG] - featurizing training data...
01:32:57 - [DEBUG] - Time to execute query: 0.02 secs
  0%|          | 0/12050 [00:00<?, ?it/s]  1%|          | 71/12050 [00:00<00:16, 707.63it/s]  1%|          | 138/12050 [00:00<00:17, 695.49it/s]  2%|▏         | 194/12050 [00:00<00:18, 644.97it/s]  2%|▏         | 279/12050 [00:00<00:16, 693.02it/s]  3%|▎         | 403/12050 [00:00<00:14, 797.56it/s]  4%|▍         | 481/12050 [00:00<00:14, 792.08it/s]  5%|▍         | 557/12050 [00:00<00:15, 724.74it/s]  5%|▌         | 629/12050 [00:00<00:15, 721.84it/s]  6%|▌         | 702/12050 [00:00<00:15, 723.91it/s]  6%|▋         | 774/12050 [00:01<00:16, 665.18it/s]  7%|▋         | 841/12050 [00:01<00:19, 562.78it/s]  8%|▊         | 934/12050 [00:01<00:17, 637.55it/s]  8%|▊         | 1004/12050 [00:01<00:17, 645.63it/s]  9%|▉         | 1104/12050 [00:01<00:15, 720.23it/s] 10%|▉         | 1199/12050 [00:01<00:14, 772.24it/s] 11%|█         | 1294/12050 [00:01<00:13, 813.50it/s] 12%|█▏        | 1396/12050 [00:01<00:12, 865.04it/s] 12%|█▏        | 1487/12050 [00:01<00:12, 848.74it/s] 13%|█▎        | 1575/12050 [00:02<00:13, 764.25it/s] 14%|█▍        | 1671/12050 [00:02<00:12, 813.25it/s] 15%|█▍        | 1756/12050 [00:02<00:13, 776.74it/s] 15%|█▌        | 1837/12050 [00:02<00:13, 747.08it/s] 16%|█▌        | 1914/12050 [00:02<00:13, 744.93it/s] 17%|█▋        | 1990/12050 [00:02<00:16, 626.22it/s] 17%|█▋        | 2057/12050 [00:02<00:19, 525.18it/s] 18%|█▊        | 2116/12050 [00:03<00:20, 481.10it/s] 18%|█▊        | 2169/12050 [00:03<00:21, 456.31it/s] 18%|█▊        | 2219/12050 [00:03<00:22, 441.08it/s] 19%|█▉        | 2270/12050 [00:03<00:21, 459.67it/s] 20%|█▉        | 2359/12050 [00:03<00:18, 536.56it/s] 20%|██        | 2433/12050 [00:03<00:16, 582.69it/s] 21%|██        | 2541/12050 [00:03<00:14, 674.49it/s] 22%|██▏       | 2629/12050 [00:03<00:13, 724.26it/s] 23%|██▎       | 2714/12050 [00:03<00:12, 742.88it/s] 23%|██▎       | 2794/12050 [00:03<00:12, 754.59it/s] 24%|██▍       | 2884/12050 [00:04<00:11, 791.75it/s] 25%|██▍       | 2967/12050 [00:04<00:11, 758.70it/s] 25%|██▌       | 3046/12050 [00:04<00:12, 743.44it/s] 26%|██▌       | 3123/12050 [00:04<00:12, 734.15it/s] 27%|██▋       | 3214/12050 [00:04<00:11, 773.18it/s] 27%|██▋       | 3299/12050 [00:04<00:11, 794.08it/s] 28%|██▊       | 3392/12050 [00:04<00:10, 829.37it/s] 29%|██▉       | 3486/12050 [00:04<00:09, 857.68it/s] 30%|██▉       | 3579/12050 [00:04<00:09, 873.57it/s] 30%|███       | 3668/12050 [00:05<00:10, 819.69it/s] 31%|███       | 3752/12050 [00:05<00:10, 770.97it/s] 32%|███▏      | 3831/12050 [00:05<00:11, 744.35it/s] 32%|███▏      | 3907/12050 [00:05<00:11, 687.89it/s] 33%|███▎      | 3978/12050 [00:05<00:12, 664.48it/s] 34%|███▎      | 4046/12050 [00:05<00:15, 522.04it/s] 34%|███▍      | 4130/12050 [00:05<00:13, 584.40it/s] 35%|███▍      | 4195/12050 [00:05<00:13, 572.91it/s] 35%|███▌      | 4257/12050 [00:06<00:14, 548.09it/s] 36%|███▌      | 4329/12050 [00:06<00:13, 586.78it/s] 36%|███▋      | 4391/12050 [00:06<00:15, 502.33it/s] 37%|███▋      | 4446/12050 [00:06<00:14, 509.67it/s] 37%|███▋      | 4501/12050 [00:06<00:18, 411.92it/s] 38%|███▊      | 4556/12050 [00:06<00:16, 444.74it/s] 38%|███▊      | 4605/12050 [00:06<00:18, 411.69it/s] 39%|███▉      | 4674/12050 [00:06<00:15, 466.49it/s] 39%|███▉      | 4726/12050 [00:07<00:16, 439.06it/s] 40%|███▉      | 4774/12050 [00:07<00:18, 389.32it/s] 40%|████      | 4836/12050 [00:07<00:16, 431.62it/s] 41%|████      | 4887/12050 [00:07<00:16, 447.40it/s] 41%|████      | 4965/12050 [00:07<00:13, 509.85it/s] 42%|████▏     | 5022/12050 [00:07<00:15, 468.29it/s] 42%|████▏     | 5074/12050 [00:07<00:16, 427.00it/s] 43%|████▎     | 5131/12050 [00:07<00:15, 454.91it/s] 43%|████▎     | 5194/12050 [00:08<00:13, 491.37it/s] 44%|████▎     | 5247/12050 [00:08<00:14, 468.31it/s] 44%|████▍     | 5297/12050 [00:08<00:15, 427.25it/s] 44%|████▍     | 5351/12050 [00:08<00:14, 450.40it/s] 45%|████▍     | 5398/12050 [00:08<00:18, 355.84it/s] 45%|████▌     | 5439/12050 [00:08<00:20, 325.65it/s] 45%|████▌     | 5476/12050 [00:08<00:21, 308.42it/s] 46%|████▌     | 5535/12050 [00:09<00:18, 359.62it/s] 46%|████▋     | 5594/12050 [00:09<00:15, 406.20it/s] 47%|████▋     | 5674/12050 [00:09<00:13, 475.81it/s] 48%|████▊     | 5771/12050 [00:09<00:11, 558.28it/s] 49%|████▊     | 5854/12050 [00:09<00:10, 618.23it/s] 49%|████▉     | 5956/12050 [00:09<00:08, 700.52it/s] 50%|█████     | 6054/12050 [00:09<00:07, 761.82it/s] 51%|█████     | 6160/12050 [00:09<00:07, 831.50it/s] 52%|█████▏    | 6254/12050 [00:09<00:06, 859.26it/s] 53%|█████▎    | 6351/12050 [00:09<00:06, 888.32it/s] 53%|█████▎    | 6445/12050 [00:10<00:06, 836.74it/s] 54%|█████▍    | 6533/12050 [00:10<00:06, 842.14it/s] 55%|█████▌    | 6645/12050 [00:10<00:05, 908.92it/s] 56%|█████▌    | 6740/12050 [00:10<00:07, 747.12it/s] 57%|█████▋    | 6832/12050 [00:10<00:06, 791.02it/s] 57%|█████▋    | 6917/12050 [00:10<00:06, 780.20it/s] 58%|█████▊    | 7000/12050 [00:10<00:06, 721.48it/s] 59%|█████▉    | 7116/12050 [00:10<00:06, 813.77it/s] 60%|█████▉    | 7204/12050 [00:11<00:06, 782.02it/s] 60%|██████    | 7288/12050 [00:11<00:06, 741.67it/s] 61%|██████▏   | 7388/12050 [00:11<00:05, 802.82it/s] 62%|██████▏   | 7475/12050 [00:11<00:05, 821.85it/s] 63%|██████▎   | 7578/12050 [00:11<00:05, 873.50it/s] 64%|██████▎   | 7669/12050 [00:11<00:05, 814.78it/s] 64%|██████▍   | 7759/12050 [00:11<00:05, 831.42it/s] 65%|██████▌   | 7845/12050 [00:11<00:06, 664.58it/s] 66%|██████▌   | 7919/12050 [00:12<00:06, 594.32it/s] 66%|██████▋   | 7985/12050 [00:12<00:07, 545.30it/s] 67%|██████▋   | 8091/12050 [00:12<00:06, 637.42it/s] 68%|██████▊   | 8166/12050 [00:12<00:05, 666.78it/s] 68%|██████▊   | 8244/12050 [00:12<00:05, 692.25it/s] 69%|██████▉   | 8346/12050 [00:12<00:04, 765.88it/s] 70%|██████▉   | 8429/12050 [00:12<00:04, 778.36it/s] 71%|███████   | 8521/12050 [00:12<00:04, 809.07it/s] 71%|███████▏  | 8606/12050 [00:12<00:04, 715.17it/s] 72%|███████▏  | 8682/12050 [00:13<00:04, 697.11it/s] 73%|███████▎  | 8755/12050 [00:13<00:05, 625.52it/s] 73%|███████▎  | 8829/12050 [00:13<00:04, 654.34it/s] 74%|███████▍  | 8912/12050 [00:13<00:04, 698.10it/s] 75%|███████▍  | 8986/12050 [00:13<00:04, 705.81it/s] 75%|███████▌  | 9060/12050 [00:13<00:04, 714.55it/s] 76%|███████▌  | 9146/12050 [00:13<00:03, 745.51it/s] 77%|███████▋  | 9222/12050 [00:13<00:04, 683.28it/s] 77%|███████▋  | 9293/12050 [00:13<00:04, 685.77it/s] 78%|███████▊  | 9363/12050 [00:14<00:04, 605.47it/s] 78%|███████▊  | 9427/12050 [00:14<00:04, 571.80it/s] 79%|███████▉  | 9499/12050 [00:14<00:04, 606.82it/s] 80%|███████▉  | 9593/12050 [00:14<00:03, 679.01it/s] 80%|████████  | 9681/12050 [00:14<00:03, 718.36it/s] 81%|████████  | 9787/12050 [00:14<00:02, 793.74it/s] 82%|████████▏ | 9872/12050 [00:14<00:02, 749.29it/s] 83%|████████▎ | 9951/12050 [00:14<00:02, 715.19it/s] 83%|████████▎ | 10028/12050 [00:14<00:02, 729.84it/s] 84%|████████▍ | 10104/12050 [00:15<00:02, 730.31it/s] 85%|████████▍ | 10183/12050 [00:15<00:02, 746.78it/s] 85%|████████▌ | 10259/12050 [00:15<00:02, 632.52it/s] 86%|████████▌ | 10327/12050 [00:15<00:03, 531.06it/s] 86%|████████▋ | 10394/12050 [00:15<00:02, 565.90it/s] 87%|████████▋ | 10488/12050 [00:15<00:02, 642.29it/s] 88%|████████▊ | 10559/12050 [00:15<00:02, 597.98it/s] 88%|████████▊ | 10642/12050 [00:15<00:02, 651.84it/s] 89%|████████▉ | 10719/12050 [00:16<00:01, 677.74it/s] 90%|████████▉ | 10825/12050 [00:16<00:01, 758.75it/s] 91%|█████████ | 10907/12050 [00:16<00:01, 727.35it/s] 91%|█████████ | 10985/12050 [00:16<00:01, 657.47it/s] 92%|█████████▏| 11077/12050 [00:16<00:01, 718.44it/s] 93%|█████████▎| 11154/12050 [00:16<00:01, 626.40it/s] 93%|█████████▎| 11239/12050 [00:16<00:01, 679.82it/s] 94%|█████████▍| 11334/12050 [00:16<00:00, 741.37it/s] 95%|█████████▍| 11414/12050 [00:17<00:00, 732.75it/s] 95%|█████████▌| 11491/12050 [00:17<00:00, 634.02it/s] 96%|█████████▌| 11574/12050 [00:17<00:00, 680.44it/s] 97%|█████████▋| 11653/12050 [00:17<00:00, 708.88it/s] 98%|█████████▊| 11771/12050 [00:17<00:00, 804.53it/s] 98%|█████████▊| 11859/12050 [00:17<00:00, 778.34it/s] 99%|█████████▉| 11967/12050 [00:17<00:00, 848.32it/s]100%|██████████| 12050/12050 [00:17<00:00, 673.95it/s]
01:33:17 - [DEBUG] - Time to execute query: 0.03 secs
01:33:18 - [DEBUG] - Preparing to execute 11 queries.
01:33:18 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_name'   AND  t1."brewery_id"<>t2."brewery_id"   AND  t3.rv_val = t2."brewery_name" GROUP BY _vid_, val_id with id 0
01:33:19 - [DEBUG] - Time to execute query with id 0: 0.01 secs
01:33:19 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_id'   AND  t1."brewery_name"=t2."brewery_name"   AND  t3.rv_val <> t2."brewery_id" GROUP BY _vid_, val_id with id 1
01:33:19 - [DEBUG] - Time to execute query with id 1: 0.03 secs
01:33:19 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_id'   AND  t1."brewery_name"<>t2."brewery_name"   AND  t3.rv_val = t2."brewery_id" GROUP BY _vid_, val_id with id 2
01:33:19 - [DEBUG] - Time to execute query with id 2: 0.01 secs
01:33:19 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_name'   AND  t1."brewery_id"=t2."brewery_id"   AND  t3.rv_val <> t2."brewery_name" GROUP BY _vid_, val_id with id 3
01:33:19 - [DEBUG] - Time to execute query with id 3: 0.01 secs
01:33:19 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_id'   AND  t1."city"<>t2."city"   AND  t3.rv_val = t2."brewery_id" GROUP BY _vid_, val_id with id 4
01:33:19 - [DEBUG] - Time to execute query with id 4: 0.01 secs
01:33:19 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'city'   AND  t1."brewery_id"=t2."brewery_id"   AND  t3.rv_val <> t2."city" GROUP BY _vid_, val_id with id 5
01:33:20 - [DEBUG] - Time to execute query with id 5: 0.04 secs
01:33:20 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_id'   AND  t1."state"<>t2."state"   AND  t3.rv_val = t2."brewery_id" GROUP BY _vid_, val_id with id 6
01:33:20 - [DEBUG] - Time to execute query with id 6: 0.01 secs
01:33:20 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'state'   AND  t1."brewery_id"=t2."brewery_id"   AND  t3.rv_val <> t2."state" GROUP BY _vid_, val_id with id 7
01:33:20 - [DEBUG] - Time to execute query with id 7: 0.01 secs
01:33:20 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'beer_name'   AND  t1."brewery_name"=t2."brewery_name" AND t1."brewery_id"<>t2."brewery_id"   AND  t3.rv_val = t2."beer_name" GROUP BY _vid_, val_id with id 8
01:33:20 - [DEBUG] - Time to execute query with id 8: 0.00 secs
01:33:20 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_name'   AND  t1."beer_name"=t2."beer_name" AND t1."brewery_id"<>t2."brewery_id"   AND  t3.rv_val = t2."brewery_name" GROUP BY _vid_, val_id with id 9
01:33:20 - [DEBUG] - Time to execute query with id 9: 0.00 secs
01:33:20 - [DEBUG] - Starting to execute query SELECT _vid_, val_id, count(*) violations FROM   "beers_ori" as t1, "beers_ori" as t2, pos_values as t3 WHERE  t1._tid_ != t2._tid_   AND  t1._tid_ = t3._tid_   AND  t3.attribute = 'brewery_id'   AND  t1."beer_name"=t2."beer_name" AND t1."brewery_name"=t2."brewery_name"   AND  t3.rv_val <> t2."brewery_id" GROUP BY _vid_, val_id with id 10
01:33:20 - [DEBUG] - Time to execute query with id 10: 0.00 secs
01:33:20 - [DEBUG] - Time to execute 11 queries: 0.14 secs
01:33:24 - [DEBUG] - DONE featurization.
01:33:24 - [DEBUG] - generating weak labels...
01:33:24 - [DEBUG] - Time to execute query: 0.11 secs
  0%|          | 0/9835 [00:00<?, ?it/s] 48%|████▊     | 4747/9835 [00:00<00:00, 47462.80it/s] 98%|█████████▊| 9614/9835 [00:00<00:00, 47816.73it/s]100%|██████████| 9835/9835 [00:00<00:00, 47780.08it/s]
01:33:24 - [DEBUG] - DONE generating weak labels.
01:33:24 - [DEBUG] - generating mask...
01:33:24 - [DEBUG] - Time to execute query: 0.02 secs
  0%|          | 0/12050 [00:00<?, ?it/s] 47%|████▋     | 5714/12050 [00:00<00:00, 57132.43it/s]100%|██████████| 12050/12050 [00:00<00:00, 64060.09it/s]
01:33:25 - [DEBUG] - DONE generating mask.
01:33:25 - [ INFO] - DONE setting up featurized dataset.
01:33:25 - [DEBUG] - Time to featurize data: 29.61 secs
01:33:25 - [ INFO] - DONE setting up repair model.
01:33:25 - [DEBUG] - Time to setup repair model: 29.61 secs
01:33:25 - [ INFO] - training with 9835 training examples (cells)
  0%|          | 0/10 [00:00<?, ?it/s]01:33:33 - [DEBUG] - Epoch 1, cost = 0.259263, acc = 99.24%
 10%|█         | 1/10 [00:08<01:16,  8.55s/it]01:33:41 - [DEBUG] - Epoch 2, cost = 0.075433, acc = 99.31%
 20%|██        | 2/10 [00:16<01:06,  8.34s/it]01:33:50 - [DEBUG] - Epoch 3, cost = 0.071701, acc = 99.30%
 30%|███       | 3/10 [00:25<01:00,  8.57s/it]01:33:59 - [DEBUG] - Epoch 4, cost = 0.071653, acc = 99.30%
 40%|████      | 4/10 [00:34<00:51,  8.55s/it]01:34:08 - [DEBUG] - Epoch 5, cost = 0.071653, acc = 99.30%
 50%|█████     | 5/10 [00:42<00:43,  8.66s/it]01:34:18 - [DEBUG] - Epoch 6, cost = 0.071653, acc = 99.30%
 60%|██████    | 6/10 [00:52<00:35,  8.98s/it]01:34:26 - [DEBUG] - Epoch 7, cost = 0.071653, acc = 99.30%
 70%|███████   | 7/10 [01:01<00:26,  8.83s/it]01:34:35 - [DEBUG] - Epoch 8, cost = 0.071653, acc = 99.30%
 80%|████████  | 8/10 [01:10<00:17,  8.99s/it]01:34:44 - [DEBUG] - Epoch 9, cost = 0.071653, acc = 99.30%
 90%|█████████ | 9/10 [01:19<00:08,  8.85s/it]01:34:55 - [DEBUG] - Epoch 10, cost = 0.071653, acc = 99.30%
100%|██████████| 10/10 [01:29<00:00,  9.39s/it]
01:34:55 - [ INFO] - DONE training repair model.
01:34:55 - [DEBUG] - Time to fit repair model: 90.94 secs
01:34:55 - [ INFO] - inferring on 2725 examples (cells)
01:34:55 - [DEBUG] - Time to execute query: 0.24 secs
01:34:56 - [DEBUG] - Time to create index: 0.00 secs
01:34:57 - [DEBUG] - Time to create index: 0.00 secs
01:34:57 - [ INFO] - DONE inferring repairs.
01:34:57 - [DEBUG] - Time to infer correct cell values: 2.52 secs
01:34:57 - [DEBUG] - Time to create table: 0.00 secs
01:34:57 - [DEBUG] - Time to create index: 0.00 secs
01:34:57 - [DEBUG] - Time to create index: 0.00 secs
01:34:57 - [ INFO] - DONE collecting the inferred values.
01:34:57 - [DEBUG] - Time to collect inferred values: 0.04 secs
01:34:58 - [ INFO] - DONE generating repaired dataset
01:34:58 - [DEBUG] - Time to store repaired dataset: 0.25 secs
01:34:58 - [ INFO] - featurizer InitAttrFeaturizer,size 10,max 1.0000,min 1.0000,avg 1.0000,abs_avg 1.0000,weights:
id 1.0
beer_name 1.0
style 1.0
ounces 1.0
abv 1.0
ibu 1.0
brewery_id 1.0
brewery_name 1.0
city 1.0
state 1.0
featurizer OccurAttrFeaturizer,size 100,max 2.6064,min -0.0133,avg 0.1526,abs_avg 0.1528,weights:
id X id 0.0
id X beer_name 0.0
id X style -0.0
id X ounces 0.0
id X abv -0.0
id X ibu -0.0
id X brewery_id -0.0
id X brewery_name -0.0
id X city -0.0
id X state -0.0
beer_name X id 2.606
beer_name X beer_name -0.0
beer_name X style 0.128
beer_name X ounces 0.023
beer_name X abv 0.076
beer_name X ibu 0.106
beer_name X brewery_id 0.216
beer_name X brewery_name 0.212
beer_name X city 0.087
beer_name X state 0.001
style X id 0.0
style X beer_name -0.0
style X style 0.0
style X ounces 0.0
style X abv -0.0
style X ibu -0.0
style X brewery_id -0.0
style X brewery_name 0.0
style X city -0.0
style X state -0.0
ounces X id -0.0
ounces X beer_name -0.0
ounces X style 0.0
ounces X ounces -0.0
ounces X abv 0.0
ounces X ibu -0.0
ounces X brewery_id -0.0
ounces X brewery_name 0.0
ounces X city 0.0
ounces X state 0.0
abv X id 0.0
abv X beer_name -0.0
abv X style -0.0
abv X ounces 0.0
abv X abv -0.0
abv X ibu 0.0
abv X brewery_id 0.0
abv X brewery_name -0.0
abv X city -0.0
abv X state 0.0
ibu X id 0.0
ibu X beer_name -0.0
ibu X style 0.0
ibu X ounces -0.0
ibu X abv -0.0
ibu X ibu 0.0
ibu X brewery_id -0.0
ibu X brewery_name -0.0
ibu X city -0.0
ibu X state -0.0
brewery_id X id 0.743
brewery_id X beer_name 0.739
brewery_id X style 0.056
brewery_id X ounces 0.005
brewery_id X abv 0.043
brewery_id X ibu 0.053
brewery_id X brewery_id -0.0
brewery_id X brewery_name 0.743
brewery_id X city 0.502
brewery_id X state 0.072
brewery_name X id 0.789
brewery_name X beer_name 0.78
brewery_name X style 0.057
brewery_name X ounces 0.015
brewery_name X abv 0.041
brewery_name X ibu 0.05
brewery_name X brewery_id 0.789
brewery_name X brewery_name 0.0
brewery_name X city 0.494
brewery_name X state 0.068
city X id 0.815
city X beer_name 0.806
city X style 0.054
city X ounces 0.01
city X abv 0.033
city X ibu 0.06
city X brewery_id 0.821
city X brewery_name 0.813
city X city -0.0
city X state 0.048
state X id 0.111
state X beer_name 0.172
state X style 0.004
state X ounces -0.013
state X abv 0.013
state X ibu 0.008
state X brewery_id 0.933
state X brewery_name 0.94
state X city 0.135
state X state -0.0
featurizer FreqFeaturizer,size 10,max 0.0289,min -0.0141,avg 0.0020,abs_avg 0.0048,weights:
id -0.0
beer_name -0.0
style -0.0
ounces 0.0
abv -0.0
ibu -0.0
brewery_id 0.003
brewery_name 0.002
city 0.029
state -0.014
featurizer ConstraintFeaturizer,size 11,max -0.0000,min -0.7652,avg -0.2307,abs_avg 0.2307,weights:
fixed pred: t1."brewery_id"<>t2."brewery_id", violation pred: t1."brewery_name"=t2."brewery_name" -0.29
fixed pred: t1."brewery_name"=t2."brewery_name", violation pred: t1."brewery_id"<>t2."brewery_id" -0.321
fixed pred: t1."brewery_name"<>t2."brewery_name", violation pred: t1."brewery_id"=t2."brewery_id" -0.279
fixed pred: t1."brewery_id"=t2."brewery_id", violation pred: t1."brewery_name"<>t2."brewery_name" -0.328
fixed pred: t1."city"<>t2."city", violation pred: t1."brewery_id"=t2."brewery_id" -0.168
fixed pred: t1."brewery_id"=t2."brewery_id", violation pred: t1."city"<>t2."city" -0.204
fixed pred: t1."state"<>t2."state", violation pred: t1."brewery_id"=t2."brewery_id" -0.174
fixed pred: t1."brewery_id"=t2."brewery_id", violation pred: t1."state"<>t2."state" -0.765
fixed pred: t1."brewery_name"=t2."brewery_name" AND t1."brewery_id"<>t2."brewery_id", violation pred: t1."beer_name"=t2."beer_name" -0.0
fixed pred: t1."beer_name"=t2."beer_name" AND t1."brewery_id"<>t2."brewery_id", violation pred: t1."brewery_name"=t2."brewery_name" -0.0
fixed pred: t1."beer_name"=t2."beer_name" AND t1."brewery_name"=t2."brewery_name", violation pred: t1."brewery_id"<>t2."brewery_id" -0.01

01:34:58 - [DEBUG] - Time to store featurizer weights: 0.00 secs
01:35:02 - [DEBUG] - Time to create index: 0.00 secs
01:35:02 - [DEBUG] - Time to create index: 0.00 secs
01:35:02 - [ INFO] - DONE Loading clean_index_holoclean.csv
01:35:02 - [DEBUG] - Time to evaluate repairs: 1.41 secs
01:35:02 - [DEBUG] - Time to execute query: 0.00 secs
01:35:02 - [DEBUG] - Time to execute query: 0.00 secs
01:35:02 - [DEBUG] - Preparing to execute 10 queries.
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'id'   AND t1."id" != t2._value_ with id 0
01:35:02 - [DEBUG] - Time to execute query with id 0: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'beer_name'   AND t1."beer_name" != t2._value_ with id 1
01:35:02 - [DEBUG] - Time to execute query with id 1: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'style'   AND t1."style" != t2._value_ with id 2
01:35:02 - [DEBUG] - Time to execute query with id 2: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'ounces'   AND t1."ounces" != t2._value_ with id 3
01:35:02 - [DEBUG] - Time to execute query with id 3: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'abv'   AND t1."abv" != t2._value_ with id 4
01:35:02 - [DEBUG] - Time to execute query with id 4: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'ibu'   AND t1."ibu" != t2._value_ with id 5
01:35:02 - [DEBUG] - Time to execute query with id 5: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'brewery_id'   AND t1."brewery_id" != t2._value_ with id 6
01:35:02 - [DEBUG] - Time to execute query with id 6: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'brewery_name'   AND t1."brewery_name" != t2._value_ with id 7
01:35:02 - [DEBUG] - Time to execute query with id 7: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'city'   AND t1."city" != t2._value_ with id 8
01:35:02 - [DEBUG] - Time to execute query with id 8: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT count(*) FROM  "beers_ori" as t1, "beers_ori_clean" as t2 WHERE t1._tid_ = t2._tid_   AND t2._attribute_ = 'state'   AND t1."state" != t2._value_ with id 9
01:35:02 - [DEBUG] - Time to execute query with id 9: 0.00 secs
01:35:02 - [DEBUG] - Time to execute 10 queries: 0.01 secs
01:35:02 - [DEBUG] - Time to execute query: 0.00 secs
01:35:02 - [DEBUG] - Preparing to execute 10 queries.
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'id'       AND t1."id" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 0
01:35:02 - [DEBUG] - Time to execute query with id 0: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'beer_name'       AND t1."beer_name" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 1
01:35:02 - [DEBUG] - Time to execute query with id 1: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'style'       AND t1."style" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 2
01:35:02 - [DEBUG] - Time to execute query with id 2: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'ounces'       AND t1."ounces" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 3
01:35:02 - [DEBUG] - Time to execute query with id 3: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'abv'       AND t1."abv" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 4
01:35:02 - [DEBUG] - Time to execute query with id 4: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'ibu'       AND t1."ibu" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 5
01:35:02 - [DEBUG] - Time to execute query with id 5: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'brewery_id'       AND t1."brewery_id" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 6
01:35:02 - [DEBUG] - Time to execute query with id 6: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'brewery_name'       AND t1."brewery_name" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 7
01:35:02 - [DEBUG] - Time to execute query with id 7: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'city'       AND t1."city" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 8
01:35:02 - [DEBUG] - Time to execute query with id 8: 0.00 secs
01:35:02 - [DEBUG] - Starting to execute query SELECT COUNT(*) FROM   (SELECT t2._tid_, t2._attribute_, t2._value_      FROM "beers_ori" as t1, "beers_ori_clean" as t2     WHERE t1._tid_ = t2._tid_       AND t2._attribute_ = 'state'       AND t1."state" != t2._value_ ) as errors, inf_values_dom as repairs WHERE errors._tid_ = repairs._tid_   AND errors._attribute_ = repairs.attribute   AND errors._value_ = repairs.rv_value with id 9
01:35:02 - [DEBUG] - Time to execute query with id 9: 0.00 secs
01:35:02 - [DEBUG] - Time to execute 10 queries: 0.01 secs
01:35:03 - [DEBUG] - Time to execute query: 0.00 secs
01:35:03 - [DEBUG] - weak label statistics:
01:35:03 - [DEBUG] -     is_clean  cell_status  is_inferred  init = grdth init = inferred  \
0   True      0            False        False         None             
1   True      0            False        True          None             
2   True      0            True         False         True             
3   True      0            True         True          True             
4   True      1            False        True          None             
5   True      1            True         False         False            
6   True      1            True         False         True             
7   True      1            True         True          True             
8   True      2            False        False         None             
9   True      2            False        True          None             
10  True      2            True         True          True             

    w. label = init  w. label = grdth w. label = inferred infer = grdth  count  
0   True             False             None                None          7      
1   True             True              None                None          5912   
2   True             False             True                False         168    
3   True             True              True                True          2047   
4   False            False             None                None          4      
5   False            True              True                True          11     
6   False            True              False               False         63     
7   False            False             False               True          2      
8   True             False             None                None          6      
9   True             True              None                None          3396   
10  True             True              True                True          434    
01:35:03 - [ INFO] - Precision = 1.00, Recall = 0.00, Repairing Recall = 0.15, F1 = 0.01, Repairing F1 = 0.26, Detected Errors = 73, Total Errors = 3358, Correct Repairs = 11, Total Repairs = 11, Total Repairs on correct cells (Grdth present) = 0, Total Repairs on incorrect cells (Grdth present) = 11
01:35:03 - [DEBUG] - Time to generate report: 0.07 secs
01:35:03 - [DEBUG] - Time to execute query: 0.01 secs
01:35:03 - [ INFO] - 清洗后的数据已成功保存到 results/holoclean/3_beers_ori/3_beers_ori_repaired.csv
没有指定错误比例，仅进行原数据集的空值替换，不添加错误
已将注入错误的文件保存到: Data/3_beers/clean_index.csv
没有指定错误比例，仅进行原数据集的空值替换，不添加错误
已将注入错误的文件保存到: Data/3_beers/dirty_index.csv
Running Holoclean with modified dirty file: Data/3_beers/dirty_index_holoclean.csv
转换完成，结果已保存到 Data/3_beers/clean_index_holoclean.csv
Results saved to results/holoclean/3_beers_ori/3_beers_ori_repaired.csv
Holoclean finished in 146.46215772628784 seconds.
测评性能开始：
没有指定错误比例，仅进行原数据集的空值替换，不添加错误
已将注入错误的文件保存到: results/holoclean/3_beers_ori/3_beers_ori_repaired.csv
差异文件已保存到:
results/holoclean/3_beers_ori/3_beers_ori_clean_vs_dirty.csv
results/holoclean/3_beers_ori/3_beers_ori_dirty_vs_cleaned.csv
results/holoclean/3_beers_ori/3_beers_ori_clean_vs_cleaned.csv
修复错误数据文件已保存到: results/holoclean/3_beers_ori/3_beers_ori_repair_errors.csv
未修复数据文件已保存到: results/holoclean/3_beers_ori/3_beers_ori_unrepaired.csv
修复准确率: 1.0, 修复召回率: 0.003275759380583681, F1值: 0.006530127633661972
========================================
EDR 结果已保存到: results/holoclean/3_beers_ori/3_beers_ori_edr_evaluation.txt
错误减少率 (EDR): 0.003275759380583681
========================================
混合距离结果已保存到: results/holoclean/3_beers_ori/3_beers_ori_hybrid_distance_evaluation.txt
混合距离 (Hybrid Distance): 0.0760326029991612
========================================
R-EDR 结果已保存到: results/holoclean/3_beers_ori/3_beers_ori_record_based_edr_evaluation.txt
基于条目的错误减少率 (R-EDR): 0.0
========================================
测试结果:
Accuracy: 1.0
Recall: 0.003275759380583681
F1 Score: 0.006530127633661972
EDR: 0.003275759380583681
Hybrid Distance: 0.0760326029991612
R-EDR: 0.0
Time: 146.46215772628784
Speed: 6.0772679554476285 seconds/100 records
测评结束，详细测评日志见：results/holoclean/3_beers_ori
