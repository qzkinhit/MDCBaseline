<?xml version="1.0" encoding="UTF-8"?>
<task>
    <!-- ****************************************************
                      DATABASES
    **************************************************** -->
    <source>
        <!-- The (optional) source database stores tables that 
        cannot be modified (for example master data) 
        BART will not introduce changes in these tables -->
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql:bart_example</uri>
            <schema>source</schema>
            <login>pguser</login>
            <password>pguser</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="md">clean.csv</input>
        </import>
    </source>

    <target> 
        <type>DBMS</type>
        <access-configuration>
            <driver>org.postgresql.Driver</driver>
            <uri>jdbc:postgresql:bart_example</uri>
            <schema>target</schema>
            <login>pguser</login>
            <password>pguser</password>
        </access-configuration>
        <import>
            <input type="csv" separator="," table="hospitals">clean.csv</input>
        </import>
    </target>

    <!-- ****************************************************
                    DEPENDENCIES
    **************************************************** -->
    <dependencies>
<![CDATA[
DCs:        
    
// FD: Zip -> City
//e1: person(ssn: $ssn1, name: $n1, surname: $s1, city: $c1, zip: $z1), 
//person(ssn: $ssn2, name: $n2, surname: $s2, city: $c2, zip: $z2), 
//    $z1 == $z2, $c1 != $c2 -> #fail.
]]>
    </dependencies>

    <!-- ****************************************************
                      CONFIGURATION
    **************************************************** -->
    <configuration>
        <!-- To print extra information in the ouput (default = false) -->
        <printLog>true</printLog>

        <!-- To load DB every time on start (default = false) -->
        <recreateDBOnStart>true</recreateDBOnStart>

        <!-- To apply the changes (default = false) -->
        <applyCellChanges>true</applyCellChanges>

        <!-- To  apply cell changes on a copy of the original target, with a custom suffix (default = true) -->
        <cloneTargetSchema>true</cloneTargetSchema>
        <cloneSuffix>_dirty</cloneSuffix>

        <!-- To export the dirty db -->
        <exportDirtyDB>true</exportDirtyDB>
        <exportDirtyDBPath>E2/</exportDirtyDBPath>
        <exportDirtyDBType>CSV</exportDirtyDBType>

        <!-- To export the changes -->
        <exportCellChanges>true</exportCellChanges>
        <exportCellChangesPath>E2/changes.csv</exportCellChangesPath>

        <!-- To compute an estimate of the reparability (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To generate all possible changes (default = false - slow, only for toy examples)-->
        <generateAllChanges>false</generateAllChanges>

        <!-- To avoid interactions among changes. (default = true) -->
        <avoidInteractions>true</avoidInteractions>

        <!-- To check, at the end of the process, if changes are detectable. (default = false) -->
        <checkChanges>true</checkChanges>

        <!-- To compute an estimate of the repairability. Requires checkChanges = true. (default = false) -->
        <estimateRepairability>true</estimateRepairability>

        <!-- To use an optimized strategy for updates. (default = true) -->
        <useDeltaDBForChanges>true</useDeltaDBForChanges>


        <!-- To control the way in which changing the value -->
        <dirtyStrategies>
            <defaultStrategy>
                <strategy>TypoRandom</strategy>
            </defaultStrategy>
        </dirtyStrategies>
        <randomErrors>
            <tables>
                <table name="hospitals">
                    <percentage>0.5</percentage>
                    <attributes>
                        <attribute>address3</attribute>
                        <attribute>address2</attribute>
                        <attribute>city</attribute>
                        <attribute>measurecode</attribute>
                        <attribute>address1</attribute>
                        <attribute>phonenumber</attribute>
                        <attribute>hospitaltype</attribute>
                        <attribute>countyname</attribute>
                        <attribute>hospitalowner</attribute>
                        <attribute>sample</attribute>
                        <attribute>zipcode</attribute>
                        <attribute>score</attribute>
                        <attribute>condition</attribute>
                        <attribute>stateavg</attribute>
                        <attribute>providernumber</attribute>
                        <attribute>emergencyservice</attribute>
                        <attribute>measurename</attribute>
                        <attribute>state</attribute>
                    </attributes>
                </table>
            </tables>
        </randomErrors>
        

    </configuration>
</task>
